"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[98962],{27701:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>o,frontMatter:()=>d,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"classes/BM25","title":"BM25","description":"@elizaos/core v1.0.0-beta.57 / BM25","source":"@site/api/classes/BM25.md","sourceDirName":"classes","slug":"/classes/BM25","permalink":"/api/classes/BM25","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"AgentRuntime","permalink":"/api/classes/AgentRuntime"},"next":{"title":"DatabaseAdapter","permalink":"/api/classes/DatabaseAdapter"}}');var i=r(31085),c=r(71184);const d={},t="Class: BM25",l={},h=[{value:"Constructors",id:"constructors",level:2},{value:"BM25()",id:"bm25",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"termFrequencySaturation",id:"termfrequencysaturation",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"lengthNormalizationFactor",id:"lengthnormalizationfactor",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"tokenizer",id:"tokenizer",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"documentLengths",id:"documentlengths",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"averageDocLength",id:"averagedoclength",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"termToIndex",id:"termtoindex",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"documentFrequency",id:"documentfrequency",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"termFrequencies",id:"termfrequencies",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"fieldBoosts",id:"fieldboosts",level:3},{value:"Index Signature",id:"index-signature",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"documents",id:"documents",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"Methods",id:"methods",level:2},{value:"search()",id:"search",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"searchPhrase()",id:"searchphrase",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"addDocument()",id:"adddocument",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Throws",id:"throws",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"calculateIdf()",id:"calculateidf",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"getTermFrequency()",id:"gettermfrequency",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"getDocument()",id:"getdocument",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Throws",id:"throws-1",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"clearDocuments()",id:"cleardocuments",level:3},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"getDocumentCount()",id:"getdocumentcount",level:3},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"addDocuments()",id:"adddocuments",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-19",level:4}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/",children:"@elizaos/core v1.0.0-beta.57"})," / BM25"]}),"\n",(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"class-bm25",children:"Class: BM25"})}),"\n",(0,i.jsx)(n.p,{children:"Implements the Okapi BM25 (Best Matching 25) ranking function for information retrieval."}),"\n",(0,i.jsx)(n.p,{children:"BM25 ranks documents based on the query terms appearing in each document,\nconsidering term frequency (TF) and inverse document frequency (IDF).\nIt improves upon basic TF-IDF by incorporating:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Term Frequency Saturation (k1): Prevents overly frequent terms from dominating the score."}),"\n",(0,i.jsx)(n.li,{children:"Document Length Normalization (b): Penalizes documents that are longer than average,\nassuming longer documents are more likely to contain query terms by chance."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Key Components:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Tokenizer: Processes text into terms (words), handles stop words and stemming."}),"\n",(0,i.jsx)(n.li,{children:"Document Indexing: Stores document lengths, term frequencies per document,\nand overall document frequency for each term."}),"\n",(0,i.jsx)(n.li,{children:"IDF Calculation: Measures the informativeness of a term based on how many documents contain it."}),"\n",(0,i.jsx)(n.li,{children:"Scoring: Combines TF, IDF, document length, and parameters k1/b to calculate relevance."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,i.jsx)(n.h3,{id:"bm25",children:"BM25()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"BM25"}),"(",(0,i.jsx)(n.code,{children:"docs"}),"?, ",(0,i.jsx)(n.code,{children:"options"}),"?): ",(0,i.jsx)(n.a,{href:"/api/classes/BM25",children:(0,i.jsx)(n.code,{children:"BM25"})})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Creates a new BM25 search instance."}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"docs?"}),": ",(0,i.jsx)(n.code,{children:"any"}),"[]"]}),"\n",(0,i.jsx)(n.p,{children:"Optional array of initial documents (objects with string fields) to index."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"options?"}),": ",(0,i.jsx)(n.a,{href:"/api/interfaces/BM25Options",children:(0,i.jsx)(n.code,{children:"BM25Options"})})," = ",(0,i.jsx)(n.code,{children:"{}"})]}),"\n",(0,i.jsx)(n.p,{children:"Configuration options for BM25 parameters (k1, b), tokenizer (stopWords, stemming, minLength), and field boosts."}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"/api/classes/BM25",children:(0,i.jsx)(n.code,{children:"BM25"})})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1071",children:"packages/core/src/search.ts:1071"})}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(n.h3,{id:"termfrequencysaturation",children:"termFrequencySaturation"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"readonly"})," ",(0,i.jsx)(n.strong,{children:"termFrequencySaturation"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Term frequency saturation parameter (k1)."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1046",children:"packages/core/src/search.ts:1046"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"lengthnormalizationfactor",children:"lengthNormalizationFactor"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"readonly"})," ",(0,i.jsx)(n.strong,{children:"lengthNormalizationFactor"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Document length normalization factor (b)."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1048",children:"packages/core/src/search.ts:1048"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"tokenizer",children:"tokenizer"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"readonly"})," ",(0,i.jsx)(n.strong,{children:"tokenizer"}),": ",(0,i.jsx)(n.code,{children:"Tokenizer"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Tokenizer instance used for processing text."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1050",children:"packages/core/src/search.ts:1050"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"documentlengths",children:"documentLengths"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"documentLengths"}),": ",(0,i.jsx)(n.code,{children:"Uint32Array"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Array storing the length (number of tokens, adjusted by field boosts) of each document."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1052",children:"packages/core/src/search.ts:1052"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"averagedoclength",children:"averageDocLength"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"averageDocLength"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Average length of all documents in the index."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1054",children:"packages/core/src/search.ts:1054"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"termtoindex",children:"termToIndex"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"termToIndex"}),": ",(0,i.jsx)(n.code,{children:"Map"}),"<",(0,i.jsx)(n.code,{children:"string"}),", ",(0,i.jsx)(n.code,{children:"number"}),">"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Map from term (string) to its unique integer index."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1056",children:"packages/core/src/search.ts:1056"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"documentfrequency",children:"documentFrequency"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"documentFrequency"}),": ",(0,i.jsx)(n.code,{children:"Uint32Array"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Array storing the document frequency (number of docs containing the term) for each term index."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1058",children:"packages/core/src/search.ts:1058"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"termfrequencies",children:"termFrequencies"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"termFrequencies"}),": ",(0,i.jsx)(n.code,{children:"Map"}),"<",(0,i.jsx)(n.code,{children:"number"}),", ",(0,i.jsx)(n.code,{children:"Map"}),"<",(0,i.jsx)(n.code,{children:"number"}),", ",(0,i.jsx)(n.code,{children:"number"}),">>"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Map from term index to another map storing ",(0,i.jsx)(n.code,{children:"docIndex: termFrequencyInDoc"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1060",children:"packages/core/src/search.ts:1060"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"fieldboosts",children:"fieldBoosts"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"readonly"})," ",(0,i.jsx)(n.strong,{children:"fieldBoosts"}),": ",(0,i.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Boost factors for different fields within documents."}),"\n",(0,i.jsx)(n.h4,{id:"index-signature",children:"Index Signature"}),"\n",(0,i.jsxs)(n.p,{children:["[",(0,i.jsx)(n.code,{children:"key"}),": ",(0,i.jsx)(n.code,{children:"string"}),"]: ",(0,i.jsx)(n.code,{children:"number"})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1062",children:"packages/core/src/search.ts:1062"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"documents",children:"documents"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"documents"}),": ",(0,i.jsx)(n.code,{children:"any"}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Array storing the original documents added to the index."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1064",children:"packages/core/src/search.ts:1064"})}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"search",children:"search()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"search"}),"(",(0,i.jsx)(n.code,{children:"query"}),", ",(0,i.jsx)(n.code,{children:"topK"}),"): ",(0,i.jsx)(n.a,{href:"/api/interfaces/SearchResult",children:(0,i.jsx)(n.code,{children:"SearchResult"})}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Searches the indexed documents for a given query string using the BM25 ranking formula."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"query"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsx)(n.p,{children:"The search query text."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"topK"}),": ",(0,i.jsx)(n.code,{children:"number"})," = ",(0,i.jsx)(n.code,{children:"10"})]}),"\n",(0,i.jsx)(n.p,{children:"The maximum number of top-scoring results to return. Defaults to 10."}),"\n",(0,i.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/interfaces/SearchResult",children:(0,i.jsx)(n.code,{children:"SearchResult"})}),"[]"]}),"\n",(0,i.jsxs)(n.p,{children:["An array of ",(0,i.jsx)(n.code,{children:"SearchResult"})," objects, sorted by descending BM25 score."]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1209",children:"packages/core/src/search.ts:1209"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"searchphrase",children:"searchPhrase()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"searchPhrase"}),"(",(0,i.jsx)(n.code,{children:"phrase"}),", ",(0,i.jsx)(n.code,{children:"topK"}),"): ",(0,i.jsx)(n.a,{href:"/api/interfaces/SearchResult",children:(0,i.jsx)(n.code,{children:"SearchResult"})}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Searches for an exact phrase within the indexed documents.\nRanks documents containing the exact sequence of tokens higher.\nNote: This is a basic implementation. More sophisticated phrase search might consider proximity."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"phrase"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsx)(n.p,{children:"The exact phrase to search for."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"topK"}),": ",(0,i.jsx)(n.code,{children:"number"})," = ",(0,i.jsx)(n.code,{children:"10"})]}),"\n",(0,i.jsx)(n.p,{children:"The maximum number of results to return. Defaults to 10."}),"\n",(0,i.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api/interfaces/SearchResult",children:(0,i.jsx)(n.code,{children:"SearchResult"})}),"[]"]}),"\n",(0,i.jsxs)(n.p,{children:["An array of ",(0,i.jsx)(n.code,{children:"SearchResult"})," objects, sorted by score, for documents containing the phrase."]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-12",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1266",children:"packages/core/src/search.ts:1266"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"adddocument",children:"addDocument()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"addDocument"}),"(",(0,i.jsx)(n.code,{children:"doc"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Adds a single new document to the index.\nUpdates all internal index structures incrementally.\nNote: For adding many documents, ",(0,i.jsx)(n.code,{children:"addDocumentsParallel"})," is generally more efficient."]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"doc"}),": ",(0,i.jsx)(n.code,{children:"any"})]}),"\n",(0,i.jsx)(n.p,{children:"The document object (with string fields) to add."}),"\n",(0,i.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.h4,{id:"throws",children:"Throws"}),"\n",(0,i.jsx)(n.p,{children:"If the document is null or undefined."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-13",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1379",children:"packages/core/src/search.ts:1379"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"calculateidf",children:"calculateIdf()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"calculateIdf"}),"(",(0,i.jsx)(n.code,{children:"termIndex"}),"): ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Calculates the Inverse Document Frequency (IDF) for a given term index.\nUses the BM25 IDF formula: log(1 + (N - n + 0.5) / (n + 0.5))\nwhere N is the total number of documents and n is the number of documents\ncontaining the term. The +1 smooths the logarithm."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"termIndex"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n",(0,i.jsx)(n.p,{children:"The integer index of the term."}),"\n",(0,i.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.p,{children:"The IDF score for the term. Returns 0 if the term is not found or has 0 DF."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-14",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1468",children:"packages/core/src/search.ts:1468"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"gettermfrequency",children:"getTermFrequency()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"getTermFrequency"}),"(",(0,i.jsx)(n.code,{children:"termIndex"}),", ",(0,i.jsx)(n.code,{children:"docIndex"}),"): ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves the term frequency (TF) for a specific term in a specific document."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"termIndex"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n",(0,i.jsx)(n.p,{children:"The integer index of the term."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"docIndex"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n",(0,i.jsx)(n.p,{children:"The index of the document."}),"\n",(0,i.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.p,{children:"The term frequency, or 0 if the term is not in the document or indices are invalid."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-15",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1494",children:"packages/core/src/search.ts:1494"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getdocument",children:"getDocument()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"getDocument"}),"(",(0,i.jsx)(n.code,{children:"index"}),"): ",(0,i.jsx)(n.code,{children:"any"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieves the original document object stored at a given index."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"index"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n",(0,i.jsx)(n.p,{children:"The index of the document to retrieve."}),"\n",(0,i.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"any"})}),"\n",(0,i.jsx)(n.p,{children:"The document object."}),"\n",(0,i.jsx)(n.h4,{id:"throws-1",children:"Throws"}),"\n",(0,i.jsx)(n.p,{children:"If the index is out of bounds."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-16",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1504",children:"packages/core/src/search.ts:1504"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"cleardocuments",children:"clearDocuments()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"clearDocuments"}),"(): ",(0,i.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Clears all indexed documents and resets the BM25 instance to its initial state."}),"\n",(0,i.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"void"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-17",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1515",children:"packages/core/src/search.ts:1515"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getdocumentcount",children:"getDocumentCount()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"getDocumentCount"}),"(): ",(0,i.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Gets the total number of documents currently indexed."}),"\n",(0,i.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.p,{children:"The document count."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-18",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1528",children:"packages/core/src/search.ts:1528"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"adddocuments",children:"addDocuments()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"addDocuments"}),"(",(0,i.jsx)(n.code,{children:"docs"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),"[]>"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Adds multiple documents sequentially by calling ",(0,i.jsx)(n.code,{children:"addDocument"})," for each.\nThis method processes documents sequentially in the main thread."]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"docs"}),": ",(0,i.jsx)(n.code,{children:"any"}),"[]"]}),"\n",(0,i.jsx)(n.p,{children:"An array of documents to add."}),"\n",(0,i.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),"[]>"]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-19",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/btwiuse/eliza/blob/main/packages/core/src/search.ts#L1537",children:"packages/core/src/search.ts:1537"})})]})}function o(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},71184:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>t});var s=r(14041);const i={},c=s.createContext(i);function d(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);