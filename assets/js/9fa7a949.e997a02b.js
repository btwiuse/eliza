"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[93233],{33542:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>t,default:()=>u,frontMatter:()=>d,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"cli/plugins","title":"Plugin Management","description":"Manage ElizaOS plugins within a project - list, add, remove","source":"@site/docs/cli/plugins.md","sourceDirName":"cli","slug":"/cli/plugins","permalink":"/docs/cli/plugins","draft":false,"unlisted":false,"editUrl":"https://github.com/elizaos/eliza/tree/v2-develop/packages/docs/docs/cli/plugins.md","tags":[],"version":"current","lastUpdatedBy":"yung algorithm","lastUpdatedAt":1747644273000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Plugin Management","description":"Manage ElizaOS plugins within a project - list, add, remove","keywords":["plugins","extensions","packages","npm","registry","installation","configuration"],"image":"/img/cli.jpg"}}');var s=i(31085),a=i(71184);const d={sidebar_position:4,title:"Plugin Management",description:"Manage ElizaOS plugins within a project - list, add, remove",keywords:["plugins","extensions","packages","npm","registry","installation","configuration"],image:"/img/cli.jpg"},t="Plugin Command",r={},c=[{value:"Subcommands",id:"subcommands",level:2},{value:"Examples",id:"examples",level:2},{value:"Listing Available Plugins",id:"listing-available-plugins",level:3},{value:"Plugin Development Workflow",id:"plugin-development-workflow",level:2},{value:"1. Create a Plugin",id:"1-create-a-plugin",level:3},{value:"2. Develop Your Plugin",id:"2-develop-your-plugin",level:3},{value:"Listing Installed Plugins",id:"listing-installed-plugins",level:3},{value:"Removing a Plugin",id:"removing-a-plugin",level:3},{value:"Related Commands",id:"related-commands",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"plugin-command",children:"Plugin Command"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"plugins"})," command helps developers manage ElizaOS plugins within a project, allowing you to list, add, remove, and inspect installed plugins."]}),"\n",(0,s.jsx)(n.h2,{id:"subcommands",children:"Subcommands"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Subcommand"}),(0,s.jsx)(n.th,{children:"Aliases"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Arguments"}),(0,s.jsx)(n.th,{children:"Options"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"list"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"l"}),", ",(0,s.jsx)(n.code,{children:"ls"})]}),(0,s.jsx)(n.td,{children:"List available plugins to install into the project"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"add"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"install"})}),(0,s.jsx)(n.td,{children:"Add a plugin to the project"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"<plugin>"}),' (Plugin name e.g., "abc", "plugin-abc", "elizaos/plugin-abc")']}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"-n, --no-env-prompt"}),", ",(0,s.jsx)(n.code,{children:"-b, --branch <branchName>"})," (default: v2-develop), ",(0,s.jsx)(n.code,{children:"-T, --tag <tagname>"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"installed-plugins"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"List plugins found in project dependencies"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"remove"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"delete"}),", ",(0,s.jsx)(n.code,{children:"del"}),", ",(0,s.jsx)(n.code,{children:"rm"})]}),(0,s.jsx)(n.td,{children:"Remove a plugin from the project"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"<plugin>"}),' (Plugin name e.g., "abc", "plugin-abc", "elizaos/plugin-abc")']}),(0,s.jsx)(n.td,{})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h3,{id:"listing-available-plugins",children:"Listing Available Plugins"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# List all available plugins\nelizaos plugins list\n"})}),"\n",(0,s.jsx)(n.h2,{id:"plugin-development-workflow",children:"Plugin Development Workflow"}),"\n",(0,s.jsx)(n.h3,{id:"1-create-a-plugin",children:"1. Create a Plugin"}),"\n",(0,s.jsx)(n.p,{children:"Start by creating a new plugin:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"elizaos create -t plugin my-plugin\n"})}),"\n",(0,s.jsx)(n.p,{children:"This creates a starter plugin with the required directory structure."}),"\n",(0,s.jsx)(n.h3,{id:"2-develop-your-plugin",children:"2. Develop Your Plugin"}),"\n",(0,s.jsx)(n.p,{children:"(This section refers to adding/managing plugins, for actual development guidance, see plugin development docs.)"}),"\n",(0,s.jsx)(n.p,{children:"The plugin structure typically includes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"src/index.ts"})," - Main plugin code"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"src/plugin.ts"})," - Plugin configuration and initialization"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"src/metadata.ts"})," - Plugin metadata (name, description, etc.)"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Examples of adding plugins:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Add the 'openai' plugin (will look up '@elizaos/plugin-openai')\nelizaos plugins add openai\n\n# Add a specific plugin by full name\nelizaos plugins add @elizaos/plugin-anthropic\n\n# Add a plugin and skip environment variable prompts\nelizaos plugins add google-ai --no-env-prompt\n\n# Add a plugin from a specific branch (for monorepo source installs)\nelizaos plugins add custom-plugin --branch feature/new-api\n\n# Add a specific version/tag of a plugin from npm\nelizaos plugins add elevenlabs --tag beta\n\n# Install a plugin directly from GitHub (HTTPS URL)\nelizaos plugins add https://github.com/owner/my-plugin\n\n# Install from GitHub with branch reference\nelizaos plugins add https://github.com/owner/my-plugin/tree/feature-branch\n\n# Install using GitHub shorthand syntax\nelizaos plugins add github:owner/my-plugin\n\n# Install specific branch using GitHub shorthand\nelizaos plugins add github:owner/my-plugin#feature-branch\n"})}),"\n",(0,s.jsx)(n.h3,{id:"listing-installed-plugins",children:"Listing Installed Plugins"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Show plugins currently listed in package.json\nelizaos plugins installed-plugins\n"})}),"\n",(0,s.jsx)(n.h3,{id:"removing-a-plugin",children:"Removing a Plugin"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Remove the 'openai' plugin\nelizaos plugins remove openai\n\n# Remove a plugin by its full name\nelizaos plugins remove @elizaos/plugin-anthropic\n"})}),"\n",(0,s.jsx)(n.h2,{id:"related-commands",children:"Related Commands"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/cli/create",children:(0,s.jsx)(n.code,{children:"create"})}),": Create a new project or plugin."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/cli/env",children:(0,s.jsx)(n.code,{children:"env"})}),": Manage environment variables needed by plugins."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>t});var l=i(14041);const s={},a=l.createContext(s);function d(e){const n=l.useContext(a);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),l.createElement(a.Provider,{value:n},e.children)}}}]);