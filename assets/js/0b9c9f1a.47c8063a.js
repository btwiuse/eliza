"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[10674],{5345:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"cli/setup-monorepo","title":"Setup Monorepo Command","description":"Clone the ElizaOS monorepo for development or contribution","source":"@site/docs/cli/setup-monorepo.md","sourceDirName":"cli","slug":"/cli/setup-monorepo","permalink":"/docs/cli/setup-monorepo","draft":false,"unlisted":false,"editUrl":"https://github.com/elizaos/eliza/tree/v2-develop/packages/docs/docs/cli/setup-monorepo.md","tags":[],"version":"current","lastUpdatedBy":"yung algorithm","lastUpdatedAt":1747641513000,"sidebarPosition":10,"frontMatter":{"sidebar_position":10,"title":"Setup Monorepo Command","description":"Clone the ElizaOS monorepo for development or contribution","keywords":["monorepo","setup","clone","git","development","contribution"],"image":"/img/cli.jpg"}}');var t=o(31085),r=o(71184);const s={sidebar_position:10,title:"Setup Monorepo Command",description:"Clone the ElizaOS monorepo for development or contribution",keywords:["monorepo","setup","clone","git","development","contribution"],image:"/img/cli.jpg"},l="Setup Monorepo Command",d={},c=[{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:2},{value:"Functionality",id:"functionality",level:2},{value:"Example",id:"example",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"setup-monorepo-command",children:"Setup Monorepo Command"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"setup-monorepo"})," command is a utility to clone the main ElizaOS monorepo (",(0,t.jsx)(n.code,{children:"elizaOS/eliza"}),") from GitHub. This is useful for developers who want to contribute to ElizaOS or set up a full development environment."]}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"elizaos setup-monorepo [options]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Option"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Default"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"-b, --branch <branch>"})}),(0,t.jsx)(n.td,{children:"Branch to clone"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"v2-develop"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"-d, --dir <directory>"})}),(0,t.jsx)(n.td,{children:"Destination directory for the clone"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"./eliza"})})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"functionality",children:"Functionality"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Checks Destination"}),": Verifies if the target directory specified by ",(0,t.jsx)(n.code,{children:"-d"})," exists. If it exists, it must be empty. If it doesn't exist, it will be created."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Clones Repository"}),": Clones the ",(0,t.jsx)(n.code,{children:"elizaOS/eliza"})," repository from GitHub using the branch specified by ",(0,t.jsx)(n.code,{children:"-b"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Displays Next Steps"}),": After successful cloning, it provides instructions on how to proceed:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Navigate into the cloned directory (",(0,t.jsx)(n.code,{children:"cd <directory>"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:["Install dependencies (",(0,t.jsx)(n.code,{children:"bun install"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:["Build the project (",(0,t.jsx)(n.code,{children:"bun run build"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:["Start the development server (",(0,t.jsx)(n.code,{children:"bun run dev"}),") or production server (",(0,t.jsx)(n.code,{children:"bun run start"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The command will properly use your specified branch and directory path, making it easy to work with different versions of the ElizaOS repository."}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Clone the default 'v2-develop' branch into the default './eliza' directory\nelizaos setup-monorepo\n\n# Clone the 'main' branch into a specific directory 'my-eliza-dev'\nelizaos setup-monorepo --branch main --dir my-eliza-dev\n"})}),"\n",(0,t.jsx)(n.p,{children:"This command simplifies the initial setup process for working directly with the ElizaOS monorepo source code."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},71184:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>l});var i=o(14041);const t={},r=i.createContext(t);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);